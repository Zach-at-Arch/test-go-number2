name: test-go-number2
description: |
  Example component that includes a Golang server that renders templates
  and allows creation of items in a database
keywords:
  - go
  - golang
secrets:
  db_user:
    description: Root user to assign to the component's DB
    default: architect
  db_pass:
    description: Root password to assign to the component's DB
    default: secret
  db_name:
    description: Name of the DB the component will store content in
    default: app-db
  db_port:
    description: Port for the db
    default: 5432
services:
  app:
    build:
      context: .
    interfaces:
      main: 8000
    environment:
      PORT: 8000
      DB_NAME: '${{ secrets.db_name }}'
      DB_USER: '${{ secrets.db_user }}'
      DB_PASSWORD: '${{ secrets.db_pass }}'
      DB_HOST: '${{ services.app-db.interfaces.database.host }}'
      DB_PORT: '${{ services.app-db.interfaces.database.port }}'
    depends_on:
      - app-db
    liveness_probe:
      command: 'wget --spider -q localhost:8000'
      interval: 5s
    debug:
      command: |
        reflex -s -- sh -c '
          go build -o server
          ./server
        '
      build:
        args:
          DEBUG: '1'
      volumes:
        app:
          host_path: ./server
          mount_path: /usr/src
  app-db:
    image: 'postgres:12'
    interfaces:
      database:
        port: '${{ secrets.db_port }}'
        protocol: postgresql
    environment:
      POSTGRES_DB: '${{ secrets.db_name }}'
      POSTGRES_USER: '${{ secrets.db_user }}'
      POSTGRES_PASSWORD: '${{ secrets.db_pass }}'
interfaces:
  app:
    url: '${{ services.app.interfaces.main.url }}'
    ingress:
      subdomain: app
